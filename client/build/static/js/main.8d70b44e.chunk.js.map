{"version":3,"sources":["base.js","Screens/Home.js","Components/moviesCard.js","Screens/Movies.js","App.js","index.js"],"names":["app","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","storage","useStyles","makeStyles","theme","root","minHeight","display","justifyContent","alignItems","flexDirection","Home","history","useHistory","useState","fileUploadStatus","setFileUploadStatus","videoUploadStatus","setVideoUploadStatus","file","setFile","videoFile","setVideoFile","useEffect","ref","child","name","getDownloadURL","then","downloadURL","setMovieData","movieData","image","video","release","language","handleSubmit","a","alert","axios","post","push","today","Date","classes","getFullYear","String","getMonth","padStart","getDate","Container","maxWidth","className","Typography","variant","Paper","elevation","style","padding","margin","Grid","container","spacing","lg","item","xs","sm","xl","TextField","id","fullWidth","required","label","value","onChange","e","target","placeholder","type","md","htmlFor","files","endsWith","put","snapshot","Button","disabled","component","color","CircularProgress","Alert","severity","justify","onClick","transition","height","width","border","borderRadius","breakpoints","down","cardHovered","transform","cardContent","marginLeft","marginRight","marginTop","play","cursor","MoviesCard","date","year","month","dt","releaseDate","setPlay","raised","shadow","state","setState","Card","onMouseOver","onMouseOut","zdepth","controls","src","fontSize","position","CardContent","gutterBottom","Movies","pageSize","page","query","setQuery","movies","setMovies","totalCount","setTotalCount","getMovies","response","data","users","Math","ceil","total","paddingTop","align","length","map","Pagination","marginBottom","showFirstButton","showLastButton","count","App","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8d70b44e.chunk.js","sourcesContent":["import  firebase from 'firebase/app'\r\nimport \"firebase/storage\";\r\n\r\nconst app = firebase.initializeApp({\r\n    apiKey: \"AIzaSyD_NoHe9L9rrBU2riJ0YXSXzdUxzmutKGE\",\r\n  authDomain: \"video-player-d70fa.firebaseapp.com\",\r\n  projectId: \"video-player-d70fa\",\r\n  storageBucket: \"video-player-d70fa.appspot.com\",\r\n  messagingSenderId: \"610561483260\",\r\n  appId: \"1:610561483260:web:5f10e229f0b5868fba9279\",\r\n  measurementId: \"G-TLT25GXPXT\"\r\n  });\r\n  // Initialize Firebase\r\n \r\n \r\n   export const storage=app.storage()\r\n  export default app;","import { TextField, Container, makeStyles, Grid, Button,Typography,Paper} from '@material-ui/core'\r\nimport { useState, useEffect } from 'react'\r\nimport {CircularProgress} from '@material-ui/core'\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport app from '../base'\r\nimport {useHistory} from 'react-router-dom'\r\nimport axios from 'axios'\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        minHeight: '100vh',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        flexDirection:'column'\r\n\r\n    }\r\n\r\n\r\n}))\r\nconst Home = () => {\r\n    const history=useHistory()\r\n    const data = {\r\n        name: '',\r\n        release: '',\r\n        language: '',\r\n        image: '',\r\n        video: ''\r\n    }\r\n    const [fileUploadStatus, setFileUploadStatus] = useState(false)\r\n    const [videoUploadStatus, setVideoUploadStatus] = useState(false)\r\n    const [file, setFile] = useState(null)\r\n    const [videoFile, setVideoFile] = useState({})\r\n    useEffect(() => {\r\n        if (file != null)\r\n            app.storage().ref('image').child(file.name).getDownloadURL().then((downloadURL) => setMovieData({ ...movieData, image: downloadURL }))\r\n    }, [file])\r\n    useEffect(() => {\r\n        if (file != null)\r\n            app.storage().ref('video').child(videoFile.name).getDownloadURL().then((downloadURL) => setMovieData({ ...movieData, video: downloadURL }))\r\n    }, [videoFile])\r\n    const [movieData, setMovieData] = useState(data)\r\n    const handleUploadImage = (e) => {\r\n         \r\n         if(e.target.files[0].type.endsWith('jpeg') || e.target.files[0].type.endsWith('jpg')|| e.target.files[0].type.endsWith('png') )\r\n         {\r\n             setFileUploadStatus(true)\r\n        app.storage().ref(\"image\").child(e.target.files[0].name).put(e.target.files[0])\r\n            .then((snapshot) => {\r\n                setFile(e.target.files[0])\r\n                setFileUploadStatus(false)\r\n            });\r\n        }\r\n        else\r\n        alert(\"Please upload image with extension jpeg,jpg or png\")\r\n\r\n    }\r\n    const handleUploadVideo = (e) => {\r\n        if(e.target.files[0].type.endsWith('mp4'))\r\n        {\r\n         setVideoUploadStatus(true)\r\n        app.storage().ref(\"video\").child(e.target.files[0].name).put(e.target.files[0])\r\n            .then((snapshot) => {\r\n               \r\n                setVideoFile(e.target.files[0])\r\n                setVideoUploadStatus(false)\r\n            });\r\n        }\r\n        else\r\n        alert(\"Please upload video with extension mp4\")\r\n\r\n\r\n    }\r\n    const handleSubmit = async () => {\r\n        if(movieData.name===''||movieData.release===''||movieData.image===''||movieData.video===''||movieData.language==='')\r\n        alert(\"Please fill all required field\")\r\n        try {\r\n            await axios.post('http://localhost:4000/api/user/register', movieData)\r\n            setMovieData(\"\")\r\n            history.push('/movies')\r\n        }\r\n        catch (error) {\r\n            alert(error)\r\n        }\r\n    }\r\n    const today=new Date();\r\n  const currentDate=`${today.getFullYear()}-${String(today.getMonth() + 1).padStart(2, '0')}-${String(today.getDate()).padStart(2, '0')}`\r\n    const classes = useStyles()\r\n    return (\r\n        <Container maxWidth=\"md\" className={classes.root}>\r\n            <Typography variant='h5'>Movie Data</Typography>\r\n            <Paper elevation={2} style={{padding:30,margin:10}}>\r\n            <Grid container spacing={3} lg={12}>\r\n                <Grid item xs={12} sm={12} lg={12} xl={12}>\r\n                    <TextField\r\n                    id='release'\r\n                        fullWidth\r\n                        required\r\n                        variant='standard'\r\n                        label='Movie Name'\r\n                       \r\n                        value={movieData.name}\r\n                        onChange={(e) => {\r\n                            setMovieData({ ...movieData, name: e.target.value })\r\n                        }}\r\n                        \r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={12} lg={12} xl={12}>\r\n                    <TextField\r\n                        fullWidth\r\n                        required\r\n                        id='release'\r\n                        \r\n                        placeholder=\"Enter Release Date\"\r\n                        type='date'\r\n                        variant='standard'\r\n                        value={movieData.release}\r\n                        onChange={(e) => {\r\n                            setMovieData({ ...movieData, release: e.target.value })\r\n                        }}\r\n                    />\r\n\r\n                </Grid>\r\n                <Grid item xs={12} sm={12} lg={12} xl={12}>\r\n                    <TextField\r\n                        fullWidth\r\n                        required\r\n                        variant='standard'\r\n                        label='Language'\r\n                        value={movieData.language}\r\n                        onChange={(e) => {\r\n                            setMovieData({ ...movieData, language: e.target.value })\r\n                        }}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={12} lg={12} xl={12} md={12}container spacing={1} >\r\n                     <Grid item xs={12} sm={12} lg={4} xl={4} md={4} container  alignItems=\"center\">\r\n                     <Typography variant=\"h6\">Thumbnail</Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} lg={4} xl={4} md={4} container  alignItems=\"center\">\r\n                    <label htmlFor=\"btn-upload\">\r\n                        <input\r\n                            id=\"btn-upload\"\r\n                            name=\"btn-upload\"\r\n                            style={{ display: 'none' }}\r\n                            type=\"file\"\r\n\r\n                            onChange={handleUploadImage}\r\n                        />\r\n                             \r\n                        <Button\r\n                           disabled={fileUploadStatus}\r\n                            className=\"btn-choose\"\r\n                            variant=\"contained\"\r\n                            component=\"span\"\r\n                            color=\"primary\" >\r\n                            Upload Image\r\n                        </Button>\r\n                        \r\n                    </label>\r\n                    </Grid>\r\n                      <Grid item xs={12} sm={12} lg={4} xl={4} md={4}  container  alignItems=\"center\">\r\n                    {fileUploadStatus ?\r\n                        <CircularProgress />\r\n                        :\r\n                        fileUploadStatus === false &&\r\n                       movieData.image !== '' && (\r\n                        <Alert severity=\"success\">Image uploaded Successfully!</Alert>\r\n)}\r\n                        </Grid>\r\n                </Grid>\r\n\r\n                 <Grid item xs={12} sm={12} lg={12} xl={12} md={12}container spacing={1} >\r\n                     <Grid item xs={12} sm={12} lg={4} xl={4} md={4} container  alignItems=\"center\">\r\n                    <Typography variant=\"h6\">Video</Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} lg={4} xl={4} md={4} container  alignItems=\"center\">\r\n                    <label htmlFor=\"btn-video-upload\">\r\n                        <input\r\n                            id=\"btn-video-upload\"\r\n                            name=\"btn-upload\"\r\n                            style={{ display: 'none' }}\r\n                            type=\"file\"\r\n\r\n                            onChange={handleUploadVideo}\r\n                        />\r\n                             \r\n                        <Button\r\n                              disabled={videoUploadStatus}\r\n                            className=\"btn-choose\"\r\n                            variant=\"contained\"\r\n                            component=\"span\"\r\n                            color=\"primary\" >\r\n                            Upload Video\r\n                        </Button>\r\n                        \r\n                    </label>\r\n                    </Grid>\r\n                      <Grid item xs={12} sm={12} lg={4} xl={4} md={4}  container  alignItems=\"center\">\r\n                    {videoUploadStatus ?\r\n                        <CircularProgress />\r\n                        :\r\n                        videoUploadStatus === false &&\r\n                       movieData.video !== '' && (\r\n                        <Alert severity=\"success\">Video Uploaded Successfully!</Alert>\r\n)}\r\n                        </Grid>\r\n                </Grid>\r\n                <Grid item xs={12} sm={12} lg={12} xl={12} container justify='center'>\r\n                    <Button\r\n                      \r\n                        variant='contained'\r\n                        color='primary'\r\n                        onClick={handleSubmit}>\r\n                        Submit\r\n\r\n                    </Button>\r\n                </Grid>\r\n\r\n            </Grid>\r\n            </Paper>\r\n        </Container>\r\n    )\r\n}\r\nexport default Home","import PropTypes from \"prop-types\";\r\nimport { useState } from \"react\";\r\n\r\nimport {\r\n  Card,\r\n  Grid,\r\n  CardContent,\r\n  Typography,\r\n  makeStyles,\r\n  CardMedia\r\n} from \"@material-ui/core\";\r\nimport PlayCircleFilledIcon from '@material-ui/icons/PlayCircleFilled';\r\nimport PauseCircleFilledIcon from '@material-ui/icons/PauseCircleFilled';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n  \r\n    transition: \"transform 0.20s ease-in-out\",\r\n    height:'320px',\r\n    width:'280px',\r\n    border:'2px solid black',\r\n    borderRadius:'10px',\r\n     [theme.breakpoints.down('xs')]: {\r\n    //    height:'140px',\r\n    //    width:'140px'\r\n     },\r\n     \r\n   \r\n    \r\n  },\r\n  cardHovered: {\r\n   transform: \"scale3d(1.09, 1.09, 1)\",\r\n   \r\n\r\n  },\r\n  cardContent:{\r\nmarginLeft:10,\r\nmarginRight:10,\r\nmarginTop:10,\r\npadding:0,\r\ndisplay:'flex',\r\nflexDirection:'column',\r\n\r\n   \r\n  },\r\n  // text:{\r\n   \r\n  //   display:'flex',\r\n  //         justifyContent:'center',\r\n  //   marginTop:'10px'\r\n    \r\n\r\n    \r\n  // },\r\n  play:{\r\n   \r\n    cursor:'pointer',\r\n    width:'max-content'\r\n  }\r\n \r\n}));\r\n\r\nexport default function MoviesCard({\r\nname,image,video,release,language\r\n}) {\r\n   let date = new Date(release);\r\nlet year = date.getFullYear();\r\nlet month = date.getMonth()+1;\r\nlet dt = date.getDate();\r\n\r\nif (dt < 10) {\r\n  dt = '0' + dt;\r\n}\r\nif (month < 10) {\r\n  month = '0' + month;\r\n}\r\n\r\nlet releaseDate=year+'-' + month + '-'+dt;\r\n  const [play, setPlay] = useState(false)\r\n  const classes = useStyles();\r\n  const [state, setState] = useState({\r\n    raised: false,\r\n    shadow: 1,\r\n  });\r\n\r\n  return (\r\n    <Grid item lg={3} md={4} sm={6} xs={12} container justify='center' >\r\n     \r\n        <Card\r\n          className={classes.root}\r\n          classes={{ root: state.raised ? classes.cardHovered : \"\" }}\r\n          onMouseOver={() => setState({ raised: true, shadow: 3 })}\r\n          onMouseOut={() => setState({ raised: false, shadow: 1 })}\r\n          raised={state.raised}\r\n          zdepth={state.shadow}\r\n          \r\n          >\r\n          {!play? \r\n          <>\r\n          <div style={{position:'relative'}}>\r\n              <img\r\n              onClick={()=>setPlay(true)}\r\n              src={image}\r\n              style={{height:200,width:280,cursor:'pointer'}}\r\n              />\r\n              </div>\r\n            <div className={classes.play}>\r\n              < PlayCircleFilledIcon fontSize=\"large\" onClick ={()=>setPlay(true)}/>\r\n              \r\n            </div>\r\n            </>\r\n              :\r\n              <>\r\n                       <video width=\"280\" height=\"200\" controls>\r\n  <source src={video} type=\"video/mp4\" />\r\n\r\n \r\n\r\n</video>\r\n <div className={classes.play}>\r\n              < PauseCircleFilledIcon fontSize=\"large\" onClick ={()=>setPlay(false)}/>\r\n              \r\n            </div>\r\n            </>\r\n}\r\n               {/* <CardMedia \r\n              src={video}\r\n               style={{height:140}}\r\n              /> */}\r\n          {/* } */}\r\n\r\n             \r\n\r\n            \r\n            <CardContent  className={classes.cardContent}>\r\n             \r\n            \r\n              <Typography\r\n                gutterBottom\r\n                variant=\"body2\"\r\n               \r\n               \r\n              >\r\n                Title:&nbsp;{name}\r\n              </Typography>\r\n              <div>\r\n               <Typography\r\n                gutterBottom\r\n                variant=\"body2\"\r\n               \r\n               \r\n              >\r\n                 Date :&nbsp;{releaseDate}\r\n              </Typography>\r\n                <Typography\r\n                gutterBottom\r\n                variant=\"body2\"\r\n               \r\n               \r\n              >\r\n                Language :&nbsp;{language}\r\n              </Typography>\r\n              </div>\r\n\r\n              </CardContent>\r\n             \r\n             \r\n              \r\n              \r\n          \r\n        </Card>\r\n    \r\n     \r\n     \r\n\r\n    </Grid>\r\n  );\r\n}\r\n\r\n\r\n\r\n","import { Card, CardMedia, Grid, Typography, Container } from '@material-ui/core'\r\nimport Pagination from '@material-ui/lab/Pagination'\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport MoviesCard from '../Components/moviesCard'\r\nconst Movies = () => {\r\n    const [query, setQuery] = useState({\r\n        pageSize: 4,\r\n        page:1\r\n    })\r\n    const [movies, setMovies] = useState(null)\r\n    const [totalCount, setTotalCount] = useState(null)\r\n    useEffect(() => {\r\n        getMovies()\r\n    }, [setQuery])\r\n    const getMovies = async () => {\r\n        try {\r\n            const response = await axios.post(\"http://localhost:4000/api/user/viewMovie\",query)\r\n            setMovies(response.data.users)\r\n            setTotalCount(Math.ceil(response.data.total / query.pageSize));\r\n\r\n        }\r\n        catch (error) {\r\n            alert(error)\r\n        }\r\n\r\n    }\r\n    return (\r\n        <Container maxWidth=\"lg\" style={{ paddingTop: 30 ,display:'flex',justifyContent:'center',flexDirection:'column'}}>\r\n            <Typography variant='h4' style={{margin:50}} align='center'>Movies List</Typography>\r\n            <Grid container spacing={3} justify=\"center\">\r\n                {movies != null\r\n                    ?\r\n                    <>\r\n                        {movies.length === 0\r\n                            ?\r\n                            <Typography>No Movies There</Typography>\r\n                            :\r\n                            <>\r\n                                {movies.map((item) =>\r\n                                    <MoviesCard {...item} />\r\n\r\n                                )\r\n                                }\r\n                                {totalCount ?\r\n                                    <Grid item xs={12} sm={12} lg={12} md={12} container justify='center' >\r\n\r\n                                        <Pagination\r\n                                            style={{ marginTop: '50px', marginBottom: '20px' }}\r\n                                            showFirstButton\r\n                                            showLastButton\r\n                                            count={totalCount}\r\n                                            page={query.page}\r\n                                            onChange={(e, value) => {\r\n                                                setQuery({\r\n                                                    ...query,\r\n                                                    page: value \r\n                                                })\r\n                                            }}\r\n                                            color=\"primary\" />\r\n                                    </Grid>\r\n                                    : \"\"\r\n                                }\r\n\r\n                            </>\r\n                        }\r\n                    </>\r\n                    : <CircularProgress />\r\n                }\r\n\r\n            </Grid>\r\n        </Container>\r\n\r\n    )\r\n}\r\nexport default Movies","import React from 'react'\r\nimport {BrowserRouter as Router,Switch,Route} from 'react-router-dom'\r\nimport Home from './Screens/Home'\r\nimport Movies from './Screens/Movies'\r\n \r\nfunction App() {\r\n   return (\r\n   <>\r\n \r\n     \r\n      <Switch>\r\n         <Route exact path=\"/\" component={Home} />\r\n          <Route path=\"/movies\" component={Movies}/>\r\n           \r\n            \r\n      </Switch>\r\n  \r\n   </>\r\n  );\r\n}\r\n\r\nexport default App;","  \r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport {BrowserRouter as Router} from 'react-router-dom'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nReactDOM.render(\r\n  \r\n    <Router>\r\n    <App />\r\n    </Router>\r\n  ,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n\r\n"],"sourceRoot":""}